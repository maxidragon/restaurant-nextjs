generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  role          Role      @default(USER)
  image         String?
  password      String?
  accounts      Account[]
  tokens        Token[]
  orders        Order[]
}

enum Role {
  USER
  ADMIN
  EMPLOYEE
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Order {
  id        String      @id @default(cuid())
  userId    String
  user      User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  items     OrderItem[]
}

model MenuItem {
  id        String      @id @default(cuid())
  name      String
  price     Float
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  orders    OrderItem[]
}

model OrderItem {
  id         String   @id @default(cuid())
  orderId    String
  order      Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItem   MenuItem @relation(fields: [menuItemId], references: [id])
  quantity   Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  menuItemId String
}

model Token {
  id      String    @id @default(cuid())
  userId  String
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  type    TokenType
  token   String    @unique
  expires DateTime

  @@unique([userId, token, type])
}

enum TokenType {
  VERIFICATION
  PASSWORD_RESET
}
